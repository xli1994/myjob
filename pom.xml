<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<groupId>com.lxs</groupId>
	<artifactId>myjob</artifactId>
	<packaging>war</packaging>
	<version>1.0-SNAPSHOT</version>
	<name>myjob Maven Webapp</name>
	<url>http://maven.apache.org</url>

	<properties>
		<jdk.version>1.8</jdk.version>
		<project.build.java.target>1.6</project.build.java.target>
		<jstl.version>1.2</jstl.version>
		<junit.version>4.12</junit.version>
	</properties>

	<repositories>
		<!-- for JSF 2.2 Mojarra -->
		<repository>
			<id>jvnet-nexus-snapshots</id>
			<name>jvnet-nexus-snapshots</name>
			<url>https://maven.java.net/content/repositories/snapshots/</url>
		</repository>

		<!-- Primefaces repository -->
		<repository>
			<id>prime-repo</id>
			<name>PrimeFaces Maven Repository</name>
			<url>http://repository.primefaces.org</url>
			<layout>default</layout>
		</repository>

	</repositories>


	<dependencies>
		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<version>4.12</version>
			<!--  used by REST client test, so can't set test scope, coz can't compile
			<scope>test</scope>
			-->
		</dependency>

		<!-- for JSF 2.2 Mojarra -->
		<dependency>
			<groupId>org.glassfish</groupId>
			<artifactId>javax.faces</artifactId>
			<version>2.2.0</version>
		</dependency>

		<!-- Primefaces (JSF) -->
		<dependency>
			<groupId>org.primefaces</groupId>
			<artifactId>primefaces</artifactId>
			<version>5.1</version>
		</dependency>

		<!-- Primefaces all themes -->
		<dependency>
			<groupId>org.primefaces.themes</groupId>
			<artifactId>all-themes</artifactId>
			<version>1.0.10</version>
		</dependency>

		<!-- Log4j 2 -->
		<dependency>
			<groupId>org.apache.logging.log4j</groupId>
			<artifactId>log4j-api</artifactId>
			<version>2.2</version>
		</dependency>
		<dependency>
			<groupId>org.apache.logging.log4j</groupId>
			<artifactId>log4j-core</artifactId>
			<version>2.2</version>
		</dependency>

		<!-- jstl -->
		<dependency>
			<groupId>jstl</groupId>
			<artifactId>jstl</artifactId>
			<version>1.2</version>
		</dependency>

		<!-- Mysql driver: no need, already in tomcat server lib -->
		<!--  
		<dependency>
			<groupId>mysql</groupId>
			<artifactId>mysql-connector-java</artifactId>
			<version>5.1.32</version>
		</dependency>
		-->
		
		<!-- MongoDB driver -->
		<dependency>
			<groupId>org.mongodb</groupId>
			<artifactId>mongo-java-driver</artifactId>
			<version>2.13.0</version>
		</dependency>

		<!-- Apache validator -->
		<dependency>
			<groupId>commons-validator</groupId>
			<artifactId>commons-validator</artifactId>
			<version>1.4.1</version>
		</dependency>	
		
		<!-- New pdf lib -->
		<dependency>
			<groupId>com.itextpdf</groupId>
			<artifactId>itextpdf</artifactId>
			<version>5.5.5</version>
		</dependency>

		<!-- old pdf lib, required by primefaces for writing pdf file in applicationlist.xhtml output report-->
		<!--  the output report of primefaces doesn't make sense, removed from ui, hence comment out this lib
		<dependency>
			<groupId>com.lowagie</groupId>
			<artifactId>itext</artifactId>
			<version>4.2.1</version>
		</dependency>
		-->
		
		<!-- This is for reading password-protected pdf -->
		<!-- this is new vsersion for jdk1.6, but not working 
		<dependency>
			<groupId>org.bouncycastle</groupId>
			<artifactId>bcprov-jdk16</artifactId>
			<version>1.46</version>
		</dependency>
		<dependency>
			<groupId>org.bouncycastle</groupId>
			<artifactId>bcmail-jdk16</artifactId>
			<version>1.46</version>
		</dependency>
		-->
		
		<!-- reading password-protected pdf: Change to older version with jdk1.5 -->
		<dependency>
			<groupId>org.bouncycastle</groupId>
			<artifactId>bcprov-jdk15on</artifactId>
			<version>1.47</version>
		</dependency>
		<dependency>
			<groupId>org.bouncycastle</groupId>
			<artifactId>bcmail-jdk15on</artifactId>
			<version>1.47</version>
		</dependency>
		
		<!-- Apache POI for Excel and Word files -->
		<dependency>
			<groupId>org.apache.poi</groupId>
			<artifactId>poi</artifactId>
			<version>3.11</version>
		</dependency>
		<dependency>
			<groupId>org.apache.poi</groupId>
			<artifactId>poi-scratchpad</artifactId>
			<version>3.11</version>
		</dependency>
		<dependency>
			<groupId>org.apache.poi</groupId>
			<artifactId>poi-ooxml</artifactId>
			<version>3.11</version>
		</dependency>
		<dependency>
			<groupId>org.apache.poi</groupId>
			<artifactId>poi-ooxml-schemas</artifactId>
			<version>3.11</version>
		</dependency>

		<!-- Java ee 7.0, only for dev in eclipse, not deployed to tomcat-->
		<dependency>
			<groupId>javax</groupId>
			<artifactId>javaee-api</artifactId>
			<version>7.0</version>
			<scope>provided</scope>
		</dependency>

		
		<!-- Jaxrs jersey libs -->
		<dependency>
			<groupId>org.glassfish.jersey.containers</groupId>
			<artifactId>jersey-container-servlet</artifactId>
			<version>2.17</version>
			<!--  
			<scope>provided</scope>
			-->
		</dependency>
		
		<!-- if you are using Jersey client specific features without the server side -->
		<dependency>
			<groupId>org.glassfish.jersey.core</groupId>
			<artifactId>jersey-client</artifactId>
			<version>2.17</version>
			<!--  
			<scope>provided</scope>
			-->
		</dependency>

		<!-- Jersey JSON entity providers support module based on EclipseLink MOXy -->
		<!-- not useful here 
		<dependency>
			<groupId>org.glassfish.jersey.media</groupId>
			<artifactId>jersey-media-moxy</artifactId>
			<version>2.17</version>
		</dependency>
		-->
		
		<!-- This is used to get json response, otherwise got exception:
		SEVERE: MessageBodyWriter not found for media type=application/json -->
		<dependency>
			<groupId>org.glassfish.jersey.media</groupId>
			<artifactId>jersey-media-json-jackson</artifactId>
			<version>2.17</version>
		</dependency>
		
		
		<!-- Org.json, used in 9-1 client , covert JSON to/from xml with org.json.JSONObject -->
		<dependency>
			<groupId>org.json</groupId>
			<artifactId>json</artifactId>
			<version>20141113</version>
		</dependency>

		<!-- Google gson, used in 9-1 client , covert JSON to/from object -->
		<dependency>
			<groupId>com.google.code.gson</groupId>
			<artifactId>gson</artifactId>
			<version>2.3.1</version>
		</dependency>
		
		
		
		<!-- MAVEN PROPERTIES PLUGIN (read deploy property file tomcatDir.properties ), make it provided-->
		<dependency>
			<groupId>org.codehaus.mojo</groupId>
			<artifactId>properties-maven-plugin</artifactId>
			<version>1.0-alpha-2</version>
			<scope>provided</scope>
		</dependency>

		<!-- EclipseLink for JPA -->
		<!-- change to Hibernate
		<dependency>
			<groupId>org.eclipse.persistence</groupId>
			<artifactId>eclipselink</artifactId>
			<version>2.5.2</version>
		</dependency>
		-->
		
		<!-- Hibernate JPA API -->
		<dependency>
			<groupId>org.hibernate.javax.persistence</groupId>
			<artifactId>hibernate-jpa-2.1-api</artifactId>
			<version>1.0.0.Final</version>
		</dependency>

		<!-- Hibernate JPA impl -->
		<dependency>
			<groupId>org.hibernate</groupId>
			<artifactId>hibernate-entitymanager</artifactId>
			<version>4.3.8.Final</version>
		</dependency>

		<!-- Hibernate valdator for property validation-mode set = callback in persistence.xml -->
		<dependency>
			<groupId>org.hibernate</groupId>
			<artifactId>hibernate-validator</artifactId>
			<version>5.1.3.Final</version>
		</dependency>

		<!-- Apache Solr 5.0 -->
		<dependency>
			<groupId>org.apache.solr</groupId>
			<artifactId>solr-solrj</artifactId>
			<version>5.0.0</version>
		</dependency>

		<!-- Per mkyong, add it to avoid “EL parsing error” on Tomcat server when passing param to bean 
		method from commandLink and commandLink or commandButton -->
		<dependency>
			<groupId>org.glassfish.web</groupId>
			<artifactId>el-impl</artifactId>
			<version>2.2</version>
		</dependency>

		<!-- Apache commons util  -->
		<dependency>
			<groupId>org.apache.commons</groupId>
			<artifactId>commons-lang3</artifactId>
			<version>3.4</version>
		</dependency>

		<!-- Java mail API -->
		<dependency>
			<groupId>javax.mail</groupId>
			<artifactId>javax.mail-api</artifactId>
			<version>1.5.2</version>
		</dependency>
		<!-- JavaMail reference implementation jar file, including the SMTP, IMAP, and POP3 protocol providers -->
		<dependency>
			<groupId>com.sun.mail</groupId>
			<artifactId>javax.mail</artifactId>
			<version>1.5.2</version>
		</dependency>

		<!-- Omnifaces, a util lib, used for download file, comment out, it requires CDI
		not available in Tomcat
		<dependency>
			<groupId>org.omnifaces</groupId>
			<artifactId>omnifaces</artifactId>
			<version>2.0</version>
		</dependency>
		-->
	</dependencies>


	<build>
		<finalName>myjob</finalName>

		<plugins>
			<!-- Eclipse project -->
			<!-- may not need, this is for run mvn eclipse:eclipse to create eclipse project
			
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-eclipse-plugin</artifactId>
				<version>2.9</version>
				<configuration>
					
					<downloadSources>true</downloadSources>
					<downloadJavadocs>false</downloadJavadocs>
					
					<wtpversion>2.0</wtpversion>
				</configuration>
			</plugin>
			-->
			
			<!-- Set JDK Compiler Level -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<version>2.5.1</version>
				<configuration>
					<source>1.8</source>
					<target>1.8</target>
				</configuration>
			</plugin>

			<!-- use plugin to read a propertities file and set war "outputDirectory" in below-->
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>properties-maven-plugin</artifactId>
				<version>1.0-alpha-2</version>
				<executions>
           			<!-- Associate the read-project-properties goal with the initialize phase, 
           			to read the properties file. -->
					<execution>
						<phase>initialize</phase>
						<goals>
							<goal>read-project-properties</goal>
						</goals>
						<configuration>
							<files>
								<file>${basedir}/src/main/resources/tomcatDir.properties</file>
							</files>
						</configuration>
					</execution>
				</executions>
			</plugin>
			
			<!-- copy war to tomcat server with tomcat dir specified in above properties-->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-war-plugin</artifactId>
				<version>2.6</version>
				<configuration>
					<outputDirectory>${deployTargetDir}</outputDirectory>
					<classpathContainers>
						<classpathContainer>org.eclipse.jdt.launching.JRE_CONTAINER</classpathContainer>
						<classpathContainer>org.eclipse.jst.server.core.container/org.eclipse.jst.server.tomcat.runtimeTarget/Apache
							Tomcat v8.0</classpathContainer>
						<classpathContainer>org.eclipse.jst.j2ee.internal.web.container/artifact</classpathContainer>
					</classpathContainers>
				</configuration>
			</plugin>
        
			<!-- For Maven Tomcat Plugin -->
			<plugin>
				<groupId>org.apache.tomcat.maven</groupId>
				<artifactId>tomcat7-maven-plugin</artifactId>
				<version>2.2</version>
				<configuration>
					<path>/myjob</path>
				</configuration>
			</plugin>

		</plugins>

	</build>
</project>
